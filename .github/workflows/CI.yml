name: CI and Create Tag

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  CI:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        python-version: [3.11]

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Cache Poetry dependencies
        uses: actions/cache@v2
        with:
          path: |
            ~/.cache/pypoetry
            ~/.local/share/pypoetry/venv
          key: ${{ runner.os }}-poetry-${{ hashFiles('**/poetry.lock') }}
          restore-keys: |
            ${{ runner.os }}-poetry-

      - name: Install poetry
        run: |
          python -m pip install --upgrade pip
          pip install poetry
          poetry install

      - name: Run pytest
        run: poetry run poe run-all-tests

      - name: Run lint
        run: poetry run poe run-lint

      - name: Run formatter
        run: poetry run poe run-formatter

      - name: Check for uncommitted changes after formatting
        run: |
          git diff --exit-code
        shell: bash

  create-tag:
    runs-on: ubuntu-latest
    needs: CI
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Create tag with timestamp
        run: |
          TIMESTAMP=$(date +'%Y%m%d%H%M%S')
          TAG="build-${TIMESTAMP}"
          git tag $TAG
          git push origin $TAG
        env:
          GITHUB_TOKEN: ${{ secrets.REPO_TAG_TOKEN }}
        shell: bash