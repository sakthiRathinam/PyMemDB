[tool.poetry]
name = "pymemdb"
version = "0.1.0"
description = ""
authors = ["sakthi <sakthiratnam050@gmail.com>"]
readme = "README.md"

[tool.poetry.dependencies]
python = "^3.11"
typer = "^0.9.0"


[tool.poetry.group.dev.dependencies]
pytest = "^8.0.1"
poethepoet = "^0.24.4"
ruff = "^0.2.2"
pytest-sugar = "^1.0.0"
pytest-asyncio = "^0.23.7"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"


[tool.poe.tasks]
run-cli = 'python pymemdb/pymemdbcli/cli.py'
run-server = 'python pymemdb/pymemdbserver/server.py'
run-server-with-debugger = 'python -m debugpy --listen 5678 pymemdb/pymemdbserver/server.py'
run-cli-with-debugger = 'python -m debugpy --listen 5679 pymemdb/pymemdbcli/cli.py'
run-test-services = 'docker compose -f "test-services.yaml" up --build'
run-all-tests = 'python -m pytest --disable-warnings -v'
pytest-debug = "python -m pytest -o log_cli=true -o log_cli_level=INFO --capture=tee-sys"
run-lint = "ruff check"
run-formatter = "ruff format"

[tool.ruff]
line-length = 88
fix = true  # Automatically fix certain issues, if desired

[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4",  # flake8-comprehensions
    "UP",  # pyupgrade
]
ignore = [
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
    "W191",  # indentation contains tabs
]


[tool.pytest.ini_options]
markers = [
    'debug: marks tests as debug (deselect with -m "not debug")',
]
norecursedirs = ["venv", ".venv", ".env", "migrations",]
testpaths = ["tests",]
python_files = ["test*.py", "*test.py"]
python_functions = ["*_test", "test_*"]
console_output_style = "progress"
asyncio_mode = "auto"
log_cli = true